generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ==================== MODELS ====================

model User {
  id                Int                @id @default(autoincrement())
  nip               String?            @unique
  nim               String?            @unique
  nama              String
  email             String             @unique
  password          String
  role              UserRole
  no_telp           String?
  bidang_keahlian   String?
  jurusanId         Int?
  prodiId           Int?
  status            Status             @default(AKTIF)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  // Relations
  jurusan           Jurusan?           @relation(fields: [jurusanId], references: [id])
  prodi             Prodi?             @relation(fields: [prodiId], references: [id])
  proposals         Proposal[]         @relation("ProposalKetua")
  reviewedProposals Proposal[]         @relation("ProposalReviewer")
  proposalMembers   ProposalMember[]
  reviews           Review[]

  @@map("users")
}

model Jurusan {
  id      Int     @id @default(autoincrement())
  nama    String  @unique
  prodis  Prodi[]
  users   User[]

  @@map("jurusan")
}

model Prodi {
  id         Int     @id @default(autoincrement())
  nama       String
  jurusanId  Int

  // Relations
  jurusan Jurusan @relation(fields: [jurusanId], references: [id])
  users   User[]

  @@unique([nama, jurusanId])
  @@map("prodi")
}

model Skema {
  id              Int       @id @default(autoincrement())
  kode            String    @unique
  nama            String
  kategori        Kategori
  luaran_wajib    String?   @db.Text
  dana_min        Decimal?  @db.Decimal(15, 2)
  dana_max        Decimal?  @db.Decimal(15, 2)
  batas_anggota   Int       @default(5)
  tahun_aktif     String
  tanggal_buka    DateTime?
  tanggal_tutup   DateTime?
  status          Status    @default(AKTIF)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  proposals Proposal[]

  @@map("skema")
}

model Proposal {
  id               Int            @id @default(autoincrement())
  judul            String
  abstrak          String         @db.Text
  kata_kunci       String?
  skemaId          Int
  ketuaId          Int
  tahun            Int
  dana_diusulkan   Decimal?       @db.Decimal(15, 2)
  status           ProposalStatus @default(DRAFT)
  tanggal_submit   DateTime?
  reviewerId       Int?
  catatan_reviewer String?        @db.Text
  tanggal_review   DateTime?      // FIELD YANG DITAMBAHKAN
  skor_akhir       Decimal?       @db.Decimal(5, 2)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  // Relations
  skema     Skema              @relation(fields: [skemaId], references: [id])
  ketua     User               @relation("ProposalKetua", fields: [ketuaId], references: [id])
  reviewer  User?              @relation("ProposalReviewer", fields: [reviewerId], references: [id])
  members   ProposalMember[]
  reviews   Review[]
  documents Document[]

  @@map("proposals")
}

model ProposalMember {
  id         Int                @id @default(autoincrement())
  proposalId Int
  userId     Int
  peran      String
  createdAt  DateTime           @default(now())
  status     PersetujuanAnggota @default(PENDING)

  // Relations
  proposal Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id])

  @@unique([proposalId, userId])
  @@map("proposal_members")
}

model Review {
  id             Int         @id @default(autoincrement())
  proposalId     Int
  reviewerId     Int
  skor_total     Decimal?    @db.Decimal(5, 2)
  catatan        String?     @db.Text
  rekomendasi    Rekomendasi
  tanggal_review DateTime    @default(now())

  // Relations
  proposal Proposal @relation(fields: [proposalId], references: [id])
  reviewer User     @relation(fields: [reviewerId], references: [id])

  @@unique([proposalId, reviewerId])
  @@map("reviews")
}

model Pengumuman {
  id        Int      @id @default(autoincrement())
  judul     String
  konten    String   @db.Text
  kategori  String
  status    Status   @default(AKTIF)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pengumuman")
}

model Document {
  id         Int      @id @default(autoincrement())
  name       String
  url        String
  proposalId Int
  uploadedAt DateTime @default(now())

  // Relations
  proposal Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)

  @@map("documents")
}

// ==================== ENUMS ====================

enum UserRole {
  ADMIN
  DOSEN
  MAHASISWA
  REVIEWER
}

enum Status {
  AKTIF
  NONAKTIF
}

enum Kategori {
  PENELITIAN
  PENGABDIAN
  HIBAH_INTERNAL
  HIBAH_EKSTERNAL
}

enum ProposalStatus {
  DRAFT
  SUBMITTED
  REVIEW
  APPROVED
  REJECTED
  REVISION
  COMPLETED
}

enum Rekomendasi {
  LAYAK
  TIDAK_LAYAK
  REVISI
}

enum PersetujuanAnggota {
  PENDING
  APPROVED
  REJECTED
}
